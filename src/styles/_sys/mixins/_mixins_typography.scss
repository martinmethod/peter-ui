// =========================| Mixins: Typography |========================= //



//--------------------------| Font smoothing

@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}


//--------------------------| Text uppercase

@mixin text-uppercase() {
  text-transform: uppercase;
  -moz-font-feature-settings: 'case';
  -webkit-font-feature-settings: 'case';
  font-feature-settings: 'case' on;
}


//--------------------------| Titles base

@mixin typo-titles-base($type, $color: map-get($roles-col-texts, 'primary')) {
  @extend %ph-typo-titles;

  //@include text-shadow(1px 1px 0 light($color, 85%));

  font-size: map-get($roles-typo-font-sizes, $type);
}


//--------------------------| Line heights

@mixin typo-line-heights($type, $val) {
  @if $type == 'text' {
    $ratio: map-get($reg-line-heights, '170%') / $val;

    @include mq-device-holding-type('outpocket') {
      line-height: $val * $ratio;
    }

    @include mq-device-holding-type('inpocket') {
      $min-obj-size: $val * 100;
      $max-obj-size: ($val * $ratio) * 100;
      $min-vw: map-get($reg-screens, 'min');
      $max-vw: map-get($reg-breakpoints, 'xs') - 1;
      $random-divider: 5.361;

      line-height: calc(#{$val}rem + #{strip-unit(($max-obj-size - $min-obj-size) / $random-divider)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
    }
  }

  @if $type == 'resume' {
    $ratio: map-get($reg-line-heights, '150%') / $val;

    @include mq-device-holding-type('outpocket') {
      line-height: $val * $ratio;
    }

    @include mq-device-holding-type('inpocket') {
      line-height: $val;
    }
  }

  @if $type == 'title' {
    line-height: $val;
  }
}
