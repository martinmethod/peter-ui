// =========================| Atom: Cover image |========================= //



.pa-cover-image {

  //--------------------------| Variables

  $image-ratio: .5; // 2:1 (example: 2000 x 1000 px)
  $bgr-color: map-get($roles-col-backgrounds, 'image-bgr');
  $transition: all map-get($roles-transitions, 'cover-hover') ease-in-out;
  $outstep: .5em;
  $offset: 5px;
  $scale: unquote('translate(-50%, -50%) scale(1.05)');
  $col-link: map-get-deep($roles-col-links, 'light', 'link');
  $col-link-hover: map-get-deep($roles-col-links, 'light', 'hover');
  $col-link-active: map-get-deep($roles-col-links, 'light', 'active');


  //--------------------------| Mixins

  @mixin cover-image-gradient($pos, $col) {
    @include background-image(linear-gradient($pos, rgba($col, 1) 0%, rgba($col, 0) 100%));
  }

  @mixin cover-image-slices() {
    &::before,
    &::after {
      @include opacity(1);
    }

    &::before {
      left: -#{$outstep};
    }

    &::after {
      top: -#{$outstep};
    }
  }

  @mixin cover-image-slices-color($col) {
    &::before {
      @include cover-image-gradient(left, $col);
    }

    &::after {
      @include cover-image-gradient(top, $col);
    }
  }


  //--------------------------| Base

  position: relative;
  display: block;
  width: 100%;


  //--------------------------| Viewport

  .cover-viewport {
    position: relative;
    display: block;
    padding-top: 100% * $image-ratio;
    overflow: hidden;
    background-color: $bgr-color;
    border: 1px solid map-get($reg-colors, 'white');
  }


  //--------------------------| Image

  img {
    @include translate(-50%, -50%);
    @include box-sizing(content-box);

    position: absolute;
    top: 50%;
    left: 50%;
    display: block;
    width: 100%;
    height: auto;
    border: 1px solid map-get($reg-colors, 'white'); // fix 1px glitch in Chrome that reveals a thin line from the background
  }


  //--------------------------| Link

  > a {
    @include transition($transition);
    @include translateZ(0); // fix visual glitch in Chrome
    @include opacity(1);

    display: block;
    border-bottom: 0;

    img {
      @include transition($transition);
    }

    &::before,
    &::after {
      @include opacity(0);
      @include transition($transition);

      position: absolute;
      content: '';
    }

    &::before {
      top: -1px;
      left: 0;
      width: calc(100% + #{$outstep});
      height: 1px;
    }

    &::after {
      top: 0;
      left: -1px;
      width: 1px;
      height: calc(100% + #{$outstep});
    }

    html:not(.mobile) & {
      @include cover-image-slices-color($col-link);

      &:hover {
        @include opacity(.9);
        @include cover-image-slices();

        img {
          @include transform($scale);
        }
      }

      &:active {
        @include cover-image-slices-color($col-link-active);
      }
    }

    html.mobile & {
      @include cover-image-slices-color($col-link-active);

      &:active {
        @include cover-image-slices();
      }
    }

    &:active {
      @include opacity(.9);

      img {
        @include transform($scale);
      }
    }
  }


  //--------------------------| Print

  @media print {
    page-break-before: auto; /* 'always,' 'avoid,' 'left,' 'inherit,' or 'right' */
    page-break-after: auto; /* 'always,' 'avoid,' 'left,' 'inherit,' or 'right' */
    page-break-inside: avoid; /* or 'auto' */

    img {
      display: inline-block;
      page-break-before: auto; /* 'always,' 'avoid,' 'left,' 'inherit,' or 'right' */
      page-break-after: auto; /* 'always,' 'avoid,' 'left,' 'inherit,' or 'right' */
      page-break-inside: avoid; /* or 'auto' */
    }
  }


} // .pa-cover-image
